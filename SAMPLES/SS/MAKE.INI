#
#			Example Makefile 5
#
#
#		Support SourceSafe Self-Extracting Projects
#

# Requirement:
#	Provide a way to populate a directory structure from a given
#	SourceSafe project, including all its subprojects and files.
#

# Solution:
#	1) A MAKE.INI that allows extraction of the
#	   project makefiles when they don't yet exist. This
#	   make.ini will require an explicit version string
#	   to ensure the correct files are checked out.
#
#	2) SourceSafe support and recursion support in SSMAKE.INI to
#	   populate the directories.

#
# This make.ini pulls in the make.ini that resides with the executable with:
#
%if %exists($(MAKE,P)make.ini)
%  include $(MAKE,P)make.ini
%endif


#
# This make.ini sets up macros used for Opus' SourceSafe support.
#
SSDATA		= E:\SS40\DATA
SSGET		= E:\SS40\win32\ss


# Need this option in case the SourceSafe project has spaces in it.
#
.OPTIONS : TargetQuoted


	########################################################
	#      Handling for "make makefile" mode ("make -M")   #
	########################################################
%if $(.MAKE_MAKEFILE)

# Sanity check to ensure SSPROJECT is set.
#
%  if !%defined(SSPROJECT)
%    echo^
	Make -M : SSPROJECT must be defined on the command line and^
	may contain a version string. The leading "$$" of the project^
	name must be doubled on the command line. If the project name^
	or version has spaces, \" must surround the name or version.^
	^
	Examples are:^
		make -M "SSPROJECT=$$$$/demo"^
		make -M "SSPROJECT=$$$$/\"My Project\""^
		make -M "SSPROJECT=$$$$/\"My Project\" -VLRel_2"^
		make -M "SSPROJECT=$$$$/MyProject \"-VLRel 3\""
%    abort
%  endif

.SS_STORAGE : $(MAKEFILE) %.ini
%endif
